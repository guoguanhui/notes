(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{751:function(t,a,r){"use strict";r.r(a);var e=r(14),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"总览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总览"}},[t._v("#")]),t._v(" 总览")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("迭代器器（Iterator）模式的定义：提供一个对象来顺序访问聚合对象中的一系列数据，而不暴露**聚合对象（可以看成是一个容器对象）**的内部表示。迭代器模式是一种对象行为型模式，其主要优点如下。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("访问一个聚合对象的内容而无须暴露它的内部表示")]),t._v("。")]),t._v(" "),r("ul",[r("li",[t._v("遍历任务交由迭代器完成，这简化了聚合类。")]),t._v(" "),r("li",[t._v("它支持以不同方式遍历一个聚合，甚至可以自定义迭代器的子类以支持新的遍历。")]),t._v(" "),r("li",[r("strong",[t._v("增加新的聚合类和迭代器类都很方便，无须修改原有代码")]),t._v("。")]),t._v(" "),r("li",[t._v("封装性良好，为遍历不同的聚合结构提供一个统一的接口。")])])])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203281005738.png",alt:"img"}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203281005840.png",alt:"img"}})])])}),[],!1,null,null,null);a.default=s.exports}}]);