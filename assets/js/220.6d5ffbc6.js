(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{775:function(t,a,s){"use strict";s.r(a);var e=s(14),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"mybatis与hibernate的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis与hibernate的区别"}},[t._v("#")]),t._v(" Mybatis与Hibernate的区别？")]),t._v(" "),s("ol",[s("li",[t._v("Mybatis 和hibernate 不同，"),s("strong",[t._v("它不完全是一个ORM 框架，因为MyBatis 需要程序员自己编写Sql 语句")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("Mybatis 直接编写原生态sql，可以严格控制sql 执行性能，灵活度高")]),t._v("， 非常适合对关系数据模型要求不高的软件开发，因为这类软件需求变化频繁， 一但需求变化要求迅速输出成果。但是灵活的前提是"),s("strong",[t._v("mybatis 无法做到数据库无关性")]),t._v("，如果需要实现支持多种数据库的软件，则需要自定义多套sql 映射文件，工作量大。")]),t._v(" "),s("li",[t._v("Hibernate 对象/关系映射能力强， 数据库无关性好， 对于关系模型要求高的软件，如果用hibernate 开发可以节省很多代码，提高效率。")]),t._v(" "),s("li",[t._v("Hibernate的介绍："),s("a",{attrs:{href:"https://www.yuque.com/hanchanmingqi-zjjw3/kb/emclgh#yrxTV",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.yuque.com/hanchanmingqi-zjjw3/kb/emclgh#yrxTV"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"mybatis框架的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis框架的优点"}},[t._v("#")]),t._v(" Mybatis框架的优点？")]),t._v(" "),s("ol",[s("li",[t._v("基于SQL 语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL 写在XML 里，解除sql 与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL 语句，并可重用。")]),t._v(" "),s("li",[t._v("与JDBC 相比，减少了50%以上的代码量，消除了JDBC 大量冗余的代码，不需要手动开关连接；")]),t._v(" "),s("li",[t._v("很好的与各种数据库兼容（ 因为MyBatis 使用JDBC 来连接数据库，所以只要JDBC 支持的数据库MyBatis 都支持） 。")]),t._v(" "),s("li",[t._v("能够与Spring 很好的集成；")]),t._v(" "),s("li",[t._v("提供映射标签，支持对象与数据库的ORM 字段关系映射；提供对象关系映射标签，支持对象关系组件维护。")])]),t._v(" "),s("h2",{attrs:{id:"mybatis-框架的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-框架的缺点"}},[t._v("#")]),t._v(" MyBatis 框架的缺点?")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("SQL 语句的编写工作量较大，尤其当字段多、关联表多时， 对开发人员编写SQL 语句的功底有一定要求。")])]),t._v(" "),s("li",[s("p",[t._v("SQL 语句依赖于数据库，导致数据库移植性差，不能随意更换数据库。")])])]),t._v(" "),s("h2",{attrs:{id:"为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里"}},[t._v("#")]),t._v(" 为什么说 Mybatis 是半自动 ORM 映射工具？它与全自动的区别在哪里？")]),t._v(" "),s("ol",[s("li",[t._v("Hibernate 属于全自动 ORM 映射工具，"),s("strong",[t._v("使用 Hibernate 查询关联对象或者关联集合对象时，可以根据对象关系模型直接获取")]),t._v("，所以它是全自动的。")]),t._v(" "),s("li",[t._v("而 Mybatis 在查询关联对象或关联集合对象时，需要手动编写 sql 来完成，所以，称之为半自动 ORM 映射工具。")])]),t._v(" "),s("h2",{attrs:{id:"和-的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别是什么"}},[t._v("#")]),t._v(" #{}和${}的区别是什么？")]),t._v(" "),s("ol",[s("li",[t._v("#{}是预编译处理， ${}是字符串替换。")]),t._v(" "),s("li",[t._v("Mybatis 在处理#{}时，会将sql 中的#{}替换为?号，调用PreparedStatement 的set 方法来赋值；")]),t._v(" "),s("li",[t._v("Mybatis 在处理${}时， 就是把${}替换成变量的值。")]),t._v(" "),s("li",[s("strong",[t._v("使用#{}可以有效的防止SQL 注入，提高系统安全性。")])])]),t._v(" "),s("h2",{attrs:{id:"dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗"}},[t._v("#")]),t._v(" Dao 接口的工作原理是什么？Dao 接口里的方法，参数不同时，方法能重载吗？")]),t._v(" "),s("ol",[s("li",[t._v("最佳实践中，通常一个 Xml 映射文件，都会写一个 Dao 接口与之对应。")]),t._v(" "),s("li",[t._v("Dao 接口，就是人们常说的 Mapper接口，"),s("strong",[t._v("接口的全限名，就是映射文件中的 namespace 的值，接口的方法名，就是映射文件中"),s("strong",[s("strong",[t._v("MappedStatement")])]),t._v("的 id 值")]),t._v("，接口方法内的参数，就是传递给 sql 的参数。Mapper接口是没有实现类的，当调用接口方法时，"),s("strong",[t._v("接口全限名+方法名拼接字符串作为 key 值，可唯一定位一个****MappedStatement")]),t._v("，举例：com.mybatis3.mappers.StudentDao.findStudentById，可以唯一找到 namespace 为com.mybatis3.mappers.StudentDao下面id = findStudentById的MappedStatement。在 Mybatis 中，每一个<select>、<insert>、<update>、<delete>标签，都会被解析为一个MappedStatement对象。")]),t._v(" "),s("li",[t._v("Dao 接口里的方法，是不能重载的，因为是全限名+方法名的保存和寻找策略。")]),t._v(" "),s("li",[s("strong",[t._v("Dao 接口的工作原理是 JDK 动态代理，Mybatis 运行时会使用 JDK 动态代理为 Dao 接口生成代理 proxy 对象，代理对象 proxy 会拦截接口方法，转而执行"),s("strong",[s("strong",[t._v("MappedStatement")])]),t._v("所代表的 sql，然后将 sql 执行结果返回。")])])]),t._v(" "),s("h2",{attrs:{id:"动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不"}},[t._v("#")]),t._v(" 动态 sql 是做什么的？都有哪些动态 sql？能简述一下动态 sql 的执行原理不？")]),t._v(" "),s("ol",[s("li",[t._v("Mybatis 动态 sql 可以让我们在 Xml 映射文件内，以标签的形式编写动态 sql，完成逻辑判断和动态拼接 sql 的功能，Mybatis 提供了 9 种动态 sql 标签 trim|where|set|foreach|if|choose|when|otherwise|bind。")]),t._v(" "),s("li",[s("strong",[t._v("其执行原理为，使用 OGNL 从 sql 参数对象中计算表达式的值，根据表达式的值动态拼接 sql，以此来完成动态 sql 的功能")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"mybatis-是否支持延迟加载-如果支持-它的实现原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-是否支持延迟加载-如果支持-它的实现原理是什么"}},[t._v("#")]),t._v(" Mybatis 是否支持延迟加载？如果支持，它的实现原理是什么？")]),t._v(" "),s("ol",[s("li",[t._v("Mybatis 仅支持 association 关联对象和 collection 关联集合对象的延迟加载，"),s("strong",[t._v("association 指的就是一对一，collection 指的就是一对多查询")]),t._v("。在 Mybatis 配置文件中，可以配置是否启用延迟加载 lazyLoadingEnabled=true|false。")]),t._v(" "),s("li",[s("strong",[t._v("它的原理是，使用")]),t._v(" "),s("strong",[t._v("CGLIB")]),t._v(" "),s("strong",[t._v("创建目标对象的代理对象，当调用目标方法时，进入拦截器方法，比如调用")]),t._v(" "),s("strong",[t._v("a.getB().getName()****，拦截器")]),t._v(" **invoke()**"),s("strong",[t._v("方法发现")]),t._v(" **a.getB()**"),s("strong",[t._v("是 null 值，那么就会单独发送事先保存好的查询关联 B 对象的 sql，把 B 查询上来，然后调用 a.setB(b)，于是 a 的对象 b 属性就有值了，接着完成")]),t._v(" **a.getB().getName()**"),s("strong",[t._v("方法的调用")]),t._v("。这就是延迟加载的基本原理。")]),t._v(" "),s("li",[t._v("当然了，不光是 Mybatis，几乎所有的包括 Hibernate，支持延迟加载的原理都是一样的。")])]),t._v(" "),s("h2",{attrs:{id:"什么是mybatis-的接口绑定-有哪些实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是mybatis-的接口绑定-有哪些实现方式"}},[t._v("#")]),t._v(" 什么是MyBatis 的接口绑定？有哪些实现方式？")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("接口绑定，就是在MyBatis 中任意定义接口,然后把接口里面的方法和SQL 语句绑定, 我们直接调用接口方法就可以,这样比起原来了SqlSession 提供的方法我们可以有更加灵活的选择和设置。")])]),t._v(" "),s("li",[s("p",[t._v("接口绑定有两种实现方式,"),s("strong",[t._v("一种是通过注解绑定， 就是在接口的方法上面加上@Select、@Update 等注解，里面包含Sql 语句来绑定")]),t._v("； "),s("strong",[t._v("另外一种就是通过xml里面写SQL 来绑定, 在这种情况下,要指定xml 映射文件里面的namespace 必须为接口的全路径名")]),t._v("。当Sql 语句比较简单时候,用注解绑定, 当SQL 语句比较复杂时候,用xml 绑定,一般用xml 绑定的比较多。")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);