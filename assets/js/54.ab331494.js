(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{608:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"spring启动流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring启动流程"}},[t._v("#")]),t._v(" Spring启动流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203251641534.png",alt:"img"}})]),t._v(" "),a("h3",{attrs:{id:"_1-demo创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-demo创建"}},[t._v("#")]),t._v(" 1. Demo创建")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Demo")]),t._v("代码十分简单，整个工程结构如下:")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203251641452.png",alt:"img"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pom")]),t._v("依赖")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-context"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.1.8.RELEASE"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("service包下的两个类"),a("code",[t._v("OrderService")]),t._v("、"),a("code",[t._v("UserService")]),t._v("只加了"),a("code",[t._v("@Service")]),t._v("注解，dao包下的两个类"),a("code",[t._v("OrderDao")]),t._v("、"),a("code",[t._v("UserDao")]),t._v("只加了"),a("code",[t._v("@Repository")]),t._v("注解。"),a("code",[t._v("MainApplication")]),t._v("类中只写"),a("code",[t._v("main()")]),t._v("方法。代码如下：")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),t._v(" applicationContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),t._v(" userService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" orderService "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orderService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),t._v(" userDao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userDao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderDao")]),t._v(" orderDao "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderDao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orderDao"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("AppConfig")]),t._v("类是一个配置类，类上加了两个注解，加"),a("code",[t._v("@Configuration")]),t._v("表明"),a("code",[t._v("AppConfig")]),t._v("是一个配置类，加"),a("code",[t._v("@ComponentScan")]),t._v("是为了告诉"),a("code",[t._v("Spring")]),t._v("要扫描哪些包，代码如下:")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.tiantang.study"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppConfig")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动"}},[t._v("#")]),t._v(" 2. 启动")]),t._v(" "),a("p",[t._v("运行"),a("code",[t._v("MainApplication")]),t._v("中的"),a("code",[t._v("main()")]),t._v("方法，这样一个"),a("code",[t._v("Spring")]),t._v("容器就运行起来了。控制台分别打印出了"),a("code",[t._v("UserService")]),t._v("、"),a("code",[t._v("OrderService")]),t._v("、"),a("code",[t._v("UserDao")]),t._v("、"),a("code",[t._v("OrderDao")]),t._v("的"),a("code",[t._v("hash")]),t._v("码。")]),t._v(" "),a("p",[t._v("那么问题来了，相比以往"),a("code",[t._v("xml")]),t._v("配置的方式，现在就这么几行简单的代码，一个"),a("code",[t._v("Spring")]),t._v("容器就能运行起来，我们就能从容器中获取到"),a("code",[t._v("Bean")]),t._v("，"),a("code",[t._v("Spring")]),t._v("内部是如何做到的呢？下面就来逐步分析"),a("code",[t._v("Spring")]),t._v("启动的源码。")]),t._v(" "),a("h3",{attrs:{id:"_3-入口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-入口"}},[t._v("#")]),t._v(" 3. 入口")]),t._v(" "),a("p",[t._v("程序的入口为"),a("code",[t._v("main()")]),t._v("方法，从代码中可以发现，核心代码只有一行，"),a("code",[t._v("new AnnotationConfigApplicationContext(AppConfig.class)")]),t._v("，通过这一行代码，就将"),a("code",[t._v("Spring")]),t._v("容器给创建完成，然后我们就能通过"),a("code",[t._v("getBean()")]),t._v("从容器中获取到对象的了。因此，分析"),a("code",[t._v("Spring")]),t._v("源码，就从"),a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("的有参构造函数开始。")]),t._v(" "),a("p",[a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("与"),a("code",[t._v("ClassPathXmlApplicationContext")]),t._v("作用一样，前者对应的是采用"),a("code",[t._v("JavaConfig")]),t._v("技术的应用，后者对应的是"),a("code",[t._v("XML")]),t._v("配置的应用")]),t._v(" "),a("h3",{attrs:{id:"_4-基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-基础概念"}},[t._v("#")]),t._v(" 4. 基础概念")]),t._v(" "),a("p",[t._v("在进行"),a("code",[t._v("Spring")]),t._v("源码阅读之前，需要先理解几个概念。")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("Spring")]),t._v("会将所有交由"),a("code",[t._v("Spring")]),t._v("管理的类，扫描其"),a("code",[t._v("class")]),t._v("文件，将其解析成"),a("code",[t._v("**BeanDefinition**")]),t._v("，在"),a("code",[t._v("BeanDefinition")]),t._v("中会描述类的信息，例如:这个类是否是单例的，"),a("code",[t._v("Bean")]),t._v("的类型，是否是懒加载，依赖哪些类，自动装配的模型。"),a("code",[t._v("**Spring**")]),a("strong",[t._v("创建对象时，就是根据")]),a("code",[t._v("**BeanDefinition**")]),a("strong",[t._v("中的信息来创建")]),a("code",[t._v("**Bean**")]),a("strong",[t._v("。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Spring")]),t._v("容器在本文可以简单理解为"),a("code",[t._v("**DefaultListableBeanFactory**")]),t._v(",它是"),a("code",[t._v("BeanFactory")]),t._v("的实现类，这个类有几个非常重要的属性："),a("code",[t._v("beanDefinitionMap")]),t._v("是一个"),a("code",[t._v("map")]),t._v("，用来存放"),a("code",[t._v("bean")]),t._v("所对应的"),a("code",[t._v("BeanDefinition")]),t._v("；"),a("code",[t._v("beanDefinitionNames")]),t._v("是一个"),a("code",[t._v("List")]),t._v("集合，用来存放所有"),a("code",[t._v("bean")]),t._v("的"),a("code",[t._v("name")]),t._v("；"),a("code",[t._v("singletonObjects")]),t._v("是一个"),a("code",[t._v("Map")]),t._v("，用来存放所有创建好的单例"),a("code",[t._v("Bean")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Spring")]),t._v("中有很多后置处理器，但最终可以分为两种，一种是"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("，一种是"),a("code",[t._v("BeanPostProcessor")]),t._v("。"),a("strong",[t._v("前者的用途是用来干预")]),a("code",[t._v("**BeanFactory**")]),a("strong",[t._v("的创建过程，后者是用来干预")]),a("code",[t._v("**Bean**")]),a("strong",[t._v("的创建过程。后置处理器的作用十分重要，")]),a("code",[t._v("**bean**")]),a("strong",[t._v("的创建以及")]),a("code",[t._v("**AOP**")]),a("strong",[t._v("的实现全部依赖后置处理器。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-annotationconfigapplicationcontext的构造方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-annotationconfigapplicationcontext的构造方法"}},[t._v("#")]),t._v(" 5. AnnotationConfigApplicationContext的构造方法")]),t._v(" "),a("p",[a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("的构造函数的参数，是一个可变数组，可以传多个配置类，在本次"),a("code",[t._v("Demo")]),t._v("中，只传了"),a("code",[t._v("AppConfig")]),t._v("一个类。")]),t._v(" "),a("p",[t._v("在构造函数中，会先调用"),a("code",[t._v("this()")]),t._v("，在"),a("code",[t._v("this()")]),t._v("中通过调用父类构造器初始化了"),a("code",[t._v("BeanFactory")]),t._v("，以及向容器中注册了7个后置处理器。然后调用"),a("code",[t._v("register()")]),t._v("，将构造方法的参数放入到"),a("code",[t._v("BeanDefinitionMap")]),t._v("中。最后执行"),a("code",[t._v("refresh()")]),t._v("方法，这是整个"),a("code",[t._v("Spring")]),t._v("容器启动的核心，本文也将重点分析"),a("code",[t._v("refresh()")]),t._v("方法的流程和作用。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" annotatedClasses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会初始化一个BeanFactory,为默认的DefaultListableBeanFactory")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会初始化一个beanDefinition的读取器，同时向容器中注册了7个spring的后置处理器(包括BeanPostProcessor和BeanFactoryPostProcessor)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会初始化一个扫描器，后面似乎并没有用到这个扫描器，在refresh()中使用的是重新new的一个扫描器。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将配置类注册进BeanDefinitionMap中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("annotatedClasses"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"_5-1-this-调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-this-调用"}},[t._v("#")]),t._v(" 5.1 this()调用")]),t._v(" "),a("p",[a("code",[t._v("this()")]),t._v("会调用"),a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("无参构造方法，而在"),a("code",[t._v("Java")]),t._v("的继承中，会先调用父类的构造方法。所以会先调用"),a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("的父类"),a("code",[t._v("GeniricApplicationContext")]),t._v("的构造方法，在父类中初始化"),a("code",[t._v("beanFactory")]),t._v("，即直接"),a("code",[t._v("new")]),t._v("了一个"),a("code",[t._v("DefaultListableBeanFactory")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("GenericApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beanFactory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在"),a("code",[t._v("this()")]),t._v("中通过"),a("code",[t._v("new AnnotatedBeanDefinitionReader(this)")]),t._v("实例化了一个"),a("code",[t._v("Bean")]),t._v("读取器，并向"),a("code",[t._v("BeanDefinitionMap")]),t._v("中添加了"),a("code",[t._v("7")]),t._v("个元素。通过"),a("code",[t._v("new ClassPathBeanDefinitionScanner(this)")]),t._v("实例化了一个扫描器(该扫描器在后面并没有用到)。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处会先调用父类的构造器，即先执行 super(),初始化DefaultListableBeanFactory")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化了bean的读取器，并向spring中注册了7个spring自带的类，这里的注册指的是将这7个类对应的BeanDefinition放入到到BeanDefinitionMap中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reader "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotatedBeanDefinitionReader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化扫描器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scanner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassPathBeanDefinitionScanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("执行"),a("code",[t._v("this.reader = new AnnotatesBeanDefinitionReader(this)")]),t._v("时，最后会调用到"),a("code",[t._v("AnnotationConfigUtils.registerAnnotationConfigProcessors(BeanDefinitionRegistry registry,Object source)")]),t._v("方法，这个方法向"),a("code",[t._v("BeanDefinitionMap")]),t._v("中添加了"),a("code",[t._v("7")]),t._v("个类，这"),a("code",[t._v("7")]),t._v("个类的"),a("code",[t._v("BeanDefinition")]),t._v("(关于"),a("code",[t._v("BeanDefinition")]),t._v("的介绍可以参考前面的解释)均为"),a("code",[t._v("RootBeanDefinition")]),t._v("，这几个类分别为"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("、"),a("code",[t._v("AutowiredAnnotationBeanPostProcessor")]),t._v("、"),a("code",[t._v("CommonAnnotationBeanPostProcessor")]),t._v("、"),a("code",[t._v("RequiredAnnotationBeanPostProcessor")]),t._v("、"),a("code",[t._v("PersistenceBeanPostProcessor")]),t._v("、"),a("code",[t._v("EventListenerMethodProcessor")]),t._v("、"),a("code",[t._v("DefaultEventListenerFactory")]),t._v("。")]),t._v(" "),a("p",[t._v("这7个类中，"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("、"),a("code",[t._v("AutowiredAnnotationBeanPostProcessor")]),t._v("、"),a("code",[t._v("CommonAnnotationBeanPostProcessor")]),t._v("这三个类非常重要，这里先在下面代码中简单介绍了一下作用，后面会单独写文章分析它们的作用。本文的侧重点是先介绍完"),a("code",[t._v("Spring")]),t._v("启动的流程。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerAnnotationConfigProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionRegistry")]),t._v(" registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Nullable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultListableBeanFactory")]),t._v(" beanFactory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unwrapDefaultListableBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略部分代码 ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanDefs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LinkedHashSet")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册ConfigurationClassPostProcessor,这个类超级重要，它完成了对加了Configuration注解类的解析，@ComponentScan、@Import的解析。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurationClassPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册AutowiredAnnotationBeanPostProcessor,这个bean的后置处理器用来处理@Autowired的注入")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutowiredAnnotationBeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" AUTOWIRED_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册RequiredAnnotationBeanPostProcessor")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequiredAnnotationBeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" REQUIRED_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册CommonAnnotationBeanPostProcessor，用来处理如@Resource，@PostConstruct等符合JSR-250规范的注解")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for JSR-250 support, and if present add the CommonAnnotationBeanPostProcessor.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsr250Present "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("COMMON_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonAnnotationBeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" COMMON_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册PersistenceAnnotationBeanPostProcessor，用来支持JPA")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for JPA support, and if present add the PersistenceAnnotationBeanPostProcessor.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jpaPresent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBeanClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationConfigUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNotFoundException")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalStateException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cannot load optional framework class: "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" PERSISTENCE_ANNOTATION_PROCESSOR_CLASS_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PERSISTENCE_ANNOTATION_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册EventListenerMethodProcessor，用来处理方法上加了@EventListener注解的方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EVENT_LISTENER_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventListenerMethodProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EVENT_LISTENER_PROCESSOR_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册DefaultEventListenerFactory，暂时不知道干啥用的，从类名来看，是一个事件监听器的工厂")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EVENT_LISTENER_FACTORY_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),t._v(" def "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootBeanDefinition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultEventListenerFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" def"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" EVENT_LISTENER_FACTORY_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" beanDefs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("调用"),a("code",[t._v("this.scanner = new ClassPathBeanDefinitionScanner(this)")]),t._v("来初始化一个扫描器，这个扫描器在后面扫描包的时候，并没有用到，猜测是"),a("code",[t._v("Spring")]),t._v("为了满足其他的场景而初始化的，例如: 开发人员手动通过"),a("code",[t._v("register(configClass)")]),t._v("时，扫描包时使用的。")]),t._v(" "),a("h5",{attrs:{id:"_5-2-register-annotatedclasses"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-register-annotatedclasses"}},[t._v("#")]),t._v(" 5.2 register(annotatedClasses)")]),t._v(" "),a("p",[t._v("将传入的配置类"),a("code",[t._v("annotatedClasses")]),t._v("解析成"),a("code",[t._v("BeanDefinition")]),t._v("(实际类型为"),a("code",[t._v("AnnotatedGenericBeanDefinition")]),t._v(")，然后放入到"),a("code",[t._v("BeanDefinitionMap")]),t._v("中，这样后面在"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("中能解析"),a("code",[t._v("annotatedClasses")]),t._v("，例如"),a("code",[t._v("demo")]),t._v("中的"),a("code",[t._v("AppConfig")]),t._v("类，"),a("strong",[t._v("只有解析了")]),a("code",[t._v("**AppConfig**")]),a("strong",[t._v("类，才能知道")]),a("code",[t._v("**Spring**")]),a("strong",[t._v("要扫描哪些包(因为在")]),a("code",[t._v("**AppConfig**")]),a("strong",[t._v("类中添加了")]),a("code",[t._v("**@ComponentScan**")]),a("strong",[t._v("注解)，只有知道要扫描哪些包了，才能扫描出需要交给")]),a("code",[t._v("**Spring**")]),a("strong",[t._v("管理的")]),a("code",[t._v("**bean**")]),a("strong",[t._v("有哪些，这样才能利用")]),a("code",[t._v("**Spring**")]),a("strong",[t._v("来创建")]),a("code",[t._v("**bean**")]),a("strong",[t._v("。")])]),t._v(" "),a("h5",{attrs:{id:"_5-3-执行refresh-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-执行refresh-方法"}},[t._v("#")]),t._v(" 5.3 执行refresh()方法")]),t._v(" "),a("p",[a("code",[t._v("refresh()")]),t._v("方法是整个"),a("code",[t._v("Spring")]),t._v("容器的核心，在这个方法中进行了"),a("code",[t._v("bean")]),t._v("的实例化、初始化、自动装配、"),a("code",[t._v("AOP")]),t._v("等功能。下面先看看"),a("code",[t._v("refresh()")]),t._v("方法的代码，代码中加了部分个人的理解，简单介绍了每一行代码作用，后面会针对几个重要的方法做出详细分析")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("refresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalStateException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startupShutdownMonitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prepare this context for refreshing.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化属性配置文件、检验必须属性以及监听器")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Tell the subclass to refresh the internal bean factory.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给beanFactory设置序列化id")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("obtainFreshBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向beanFactory中注册了两个BeanPostProcessor,以及三个和环境相关的bean")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这两个后置处理器为ApplicationContextAwareProcessor和ApplicationListenerDetector")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 前一个后置处理是为实现了ApplicationContextAware接口的类，回调setApplicationContext()方法，")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 后一个处理器时用来检测ApplicationListener类的，当某个Bean实现了ApplicationListener接口的bean被创建好后，会被加入到监听器列表中")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allows post-processing of the bean factory in context subclasses.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空方法，由子类实现")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行所有的BeanFactoryPostProcessor，包括自定义的，以及spring内置的。默认情况下，容器中只有一个BeanFactoryPostProcessor,即：Spring内置的，ConfigurationClassPostProcessor(这个类很重要)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会先执行实现了BeanDefinitionRegistryPostProcessor接口的类，然后执行BeanFactoryPostProcessor的类")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ConfigurationClassPostProcessor类的postProcessorBeanFactory()方法进行了@Configuration类的解析，@ComponentScan的扫描，以及@Import注解的处理")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 经过这一步以后,会将所有交由spring管理的bean所对应的BeanDefinition放入到beanFactory的beanDefinitionMap中")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同时ConfigurationClassPostProcessor类的postProcessorBeanFactory()方法执行完后，向容器中添加了一个后置处理器————ImportAwareBeanPostProcessor")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invokeBeanFactoryPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册所有的BeanPostProcessor，因为在方法里面调用了getBean()方法，所以在这一步，实际上已经将所有的BeanPostProcessor实例化了")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为什么要在这一步就将BeanPostProcessor实例化呢？因为后面要实例化bean，")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 而BeanPostProcessor是用来干预bean的创建过程的，所以必须在bean实例化之前就实例化所有的BeanPostProcessor(包括开发人员自己定义的)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后再重新注册了ApplicationListenerDetector，这样做的目的是为了将ApplicationListenerDetector放入到后置处理器的最末端")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize message source for this context.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化MessageSource，用来做消息国际化。在一般项目中不会用到消息国际化")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initMessageSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize event multicaster for this context.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化事件广播器，如果容器中存在了名字为applicationEventMulticaster的广播器，则使用该广播器")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有，则初始化一个SimpleApplicationEventMulticaster")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件广播器的用途是，发布事件，并且为所发布的时间找到对应的事件监听器。")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Initialize other special beans in specific context subclasses.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行其他的初始化操作，例如和SpringMVC整合时，需要初始化一些其他的bean，但是对于纯spring工程来说，onFresh方法是一个空方法")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for listener beans and register them.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这一步会将自定义的listener的bean名称放入到事件广播器中")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同时还会将早期的ApplicationEvent发布(对于单独的spring工程来说，在此时不会有任何ApplicationEvent发布，但是和springMVC整合时，springMVC会执行onRefresh()方法，在这里会发布事件)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化剩余的非懒加载的单例bean(注意：剩余、非懒加载、单例)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为什么说是剩余呢？如果开发人员自定义了BeanPosrProcessor，而BeanPostProcessor在前面已经实例化了，所以在这里不会再实例化，因此这里使用剩余一词")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishBeanFactoryInitialization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结束refresh，主要干了一件事，就是发布一个事件ContextRefreshEvent，通知大家spring容器refresh结束了。")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 出异常后销毁bean")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("destroyBeans")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reset 'active' flag.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancelRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Propagate exception to caller.")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在bean的实例化过程中，会缓存很多信息，例如bean的注解信息，但是当单例bean实例化完成后，这些缓存信息已经不会再使用了，所以可以释放这些内存资源了")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetCommonCaches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-refresh-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-refresh-方法"}},[t._v("#")]),t._v(" 6. refresh()方法")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("refresh()")]),t._v("方法中，比较重要的方法为"),a("code",[t._v("invokeBeanFactoryPostProcessors(beanFactory)")]),t._v(" 和 "),a("code",[t._v("finishBeanFactoryInitialization(beanFactory)")]),t._v("。其他的方法相对而言比较简单，下面主要分析这两个方法，其他方法的作用，可以参考上面源码中的注释。")]),t._v(" "),a("h5",{attrs:{id:"_6-1-invokebeanfactorypostprocessors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-invokebeanfactorypostprocessors"}},[t._v("#")]),t._v(" 6.1 invokeBeanFactoryPostProcessors()")]),t._v(" "),a("p",[t._v("该方法的作用是执行所有的"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("，由于"),a("code",[t._v("Spring")]),t._v("会内置一个"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("，即"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("(如果开发人员不自定义，默认情况下只有这一个"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v(")，"),a("strong",[t._v("这个后置处理器在处理时，会解析出所有交由")]),a("code",[t._v("**Spring**")]),a("strong",[t._v("容器管理的")]),a("code",[t._v("**Bean**")]),a("strong",[t._v("，将它们解析成")]),a("code",[t._v("**BeanDefinition**")]),a("strong",[t._v("，然后放入到")]),a("code",[t._v("**BeanFactory**")]),a("strong",[t._v("的")]),a("code",[t._v("**BeanDefinitionMap**")]),a("strong",[t._v("中。")])]),t._v(" "),a("p",[t._v("该方法最终会调用到"),a("code",[t._v("PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors()")]),t._v("方法，主要作用是执行所有"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("的"),a("code",[t._v("postProcessorBeanFactory()")]),t._v("方法。"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("又分为两种情况，一种是直接实现"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("接口的类，另一种情况是实现了"),a("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("接口("),a("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("继承了"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("接口)。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203251641351.png",alt:"img"}})]),t._v(" "),a("p",[t._v("在执行过程中先执行所有的"),a("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("的"),a("code",[t._v("postProcessorBeanDefinitionRegistry()")]),t._v("方法，然后再执行"),a("code",[t._v("BeanFacotryPostProcessor")]),t._v("的"),a("code",[t._v("postProcessorBeanFactory()")]),t._v("方法。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanFactoryPostProcessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionRegistryPostProcessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanFactoryPostProcessor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postProcessBeanDefinitionRegistry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanDefinitionRegistry")]),t._v(" registry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeansException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("默认情况下，"),a("code",[t._v("Spring")]),t._v("有一个内置的"),a("code",[t._v("BeanFactoryPostProcessor")]),t._v("，即："),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("类，该类实现了"),a("code",[t._v("BeanDefinitionRegistryPostProcessor")]),t._v("类，所以会执行"),a("code",[t._v("ConfigurationClassPostProcessor.postProcessorBeanDefinitionRegistry")]),t._v(","),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("的"),a("code",[t._v("UML")]),t._v("图如上(删减了部分不重要的继承关系)")]),t._v(" "),a("h5",{attrs:{id:"_6-2-registerbeanpostprocessors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-registerbeanpostprocessors"}},[t._v("#")]),t._v(" 6.2 registerBeanPostProcessors()")]),t._v(" "),a("p",[a("strong",[t._v("该方法的作用是找到所有的")]),a("code",[t._v("**BeanPostProcessor**")]),a("strong",[t._v("，然后将这些")]),a("code",[t._v("**BeanPostProcessor**")]),a("strong",[t._v("实例化(会调用")]),a("code",[t._v("**getBean()**")]),a("strong",[t._v("方法，")]),a("code",[t._v("**getBean()**")]),a("strong",[t._v("方法的主要逻辑是，如果")]),a("code",[t._v("**bean**")]),a("strong",[t._v("存在于")]),a("code",[t._v("**BeanFactory**")]),a("strong",[t._v("中，则返回")]),a("code",[t._v("**bean**")]),t._v("**；如果不存在，则会去创建。**在后面会仔细分析"),a("code",[t._v("getBean()")]),t._v("的执行逻辑)。将这些"),a("code",[t._v("PostProcessor")]),t._v("实例化后，最后放入到"),a("code",[t._v("BeanFactory")]),t._v("的"),a("code",[t._v("beanPostProcessors")]),t._v("属性中。")]),t._v(" "),a("p",[t._v("问题：如何找到所有的"),a("code",[t._v("BeanPostProcessor")]),t._v("? 包括"),a("code",[t._v("Spring")]),t._v("内置的和开发人员自定义的。")]),t._v(" "),a("p",[t._v("由于在"),a("code",[t._v("refresh()")]),t._v("方法中，会先执行完"),a("code",[t._v("invokeBeanFactoryPostProcessor()")]),t._v("方法，这样所有自定义的"),a("code",[t._v("BeanPostProcessor")]),t._v("类均已经被扫描出并解析成"),a("code",[t._v("BeanDefinition")]),t._v("(扫描和解析又是谁做的呢？"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("做的)，存入至"),a("code",[t._v("BeanFactory")]),t._v("的"),a("code",[t._v("BeanDefinitionMap")]),t._v("，所以这儿能通过方法如下一行代码找出所有的"),a("code",[t._v("BeanPostProcessor")]),t._v("，然后通过"),a("code",[t._v("getBean()")]),t._v("全部实例化，最后再将实例化后的对象加入到"),a("code",[t._v("BeanFactory")]),t._v("的"),a("code",[t._v("beanPostProcessors")]),t._v("属性中，该属性是一个"),a("code",[t._v("List")]),t._v("集合。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" postProcessorNames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanNamesForType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("最后再重新注册了"),a("code",[t._v("ApplicationListenerDetector")]),t._v("，这样做的目的是为了将"),a("code",[t._v("ApplicationListenerDetector")]),t._v("放入到后置处理器的最末端")]),t._v(" "),a("p",[a("code",[t._v("registerBeanPostProcessor()")]),t._v(" 最终调用的是"),a("code",[t._v("PostProcessorRegistrationDelegate.registerBeanPostProcessors()")]),t._v("，下面是"),a("code",[t._v("PostProcessorRegistrationDelegate.registerBeanPostProcessors()")]),t._v("方法的代码")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractApplicationContext")]),t._v(" applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从BeanDefinitionMap中找出所有的BeanPostProcessor")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" postProcessorNames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanNamesForType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略部分代码 ...")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 分别找出实现了PriorityOrdered、Ordered接口以及普通的BeanPostProcessor")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ppName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" postProcessorNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTypeMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PriorityOrdered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处调用了getBean()方法，因此在此处就会实例化出BeanPostProcessor")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),t._v(" pp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            priorityOrderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MergedBeanDefinitionPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                internalPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTypeMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Ordered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            orderedPostProcessorNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            nonOrderedPostProcessorNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// First, register the BeanPostProcessors that implement PriorityOrdered.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sortPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("priorityOrderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将实现了PriorityOrdered接口的BeanPostProcessor添加到BeanFactory的beanPostProcessors集合中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priorityOrderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下面这部分代码与上面的代码逻辑一致，是将实现了Ordered接口以及普通的BeanPostProcessor实例化以及添加到beanPostProcessors结合中，逻辑与处理PriorityOrdered的后置处理器一样")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" orderedPostProcessors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ppName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" orderedPostProcessorNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),t._v(" pp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MergedBeanDefinitionPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            internalPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sortPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("orderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now, register all regular BeanPostProcessors.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" nonOrderedPostProcessors "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" ppName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nonOrderedPostProcessorNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),t._v(" pp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        nonOrderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MergedBeanDefinitionPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            internalPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nonOrderedPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finally, re-register all internal BeanPostProcessors.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sortPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("internalPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerBeanPostProcessors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" internalPostProcessors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Re-register post-processor for detecting inner beans as ApplicationListeners,")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// moving it to the end of the processor chain (for picking up proxies etc).")]),t._v("\n    beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationListenerDetector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后将ApplicationListenerDetector这个后置处理器一样重新放入到beanPostProcessor中，这样做的目的是为了将其放入到后置处理器的最末端")]),t._v("\n    beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBeanPostProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationListenerDetector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("applicationContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从上面的源码中可以发现，"),a("code",[t._v("BeanPostProcessor")]),t._v("存在优先级，实现了"),a("code",[t._v("PriorityOrdered")]),t._v("接口的优先级最高，其次是"),a("code",[t._v("Ordered")]),t._v("接口，最后是普通的"),a("code",[t._v("BeanPostProcessor")]),t._v("。优先级最高的，会最先放入到"),a("code",[t._v("beanPostProcessors")]),t._v("这个集合的最前面，这样在执行时，会最先执行优先级最高的后置处理器(因为"),a("code",[t._v("List")]),t._v("集合是有序的)。")]),t._v(" "),a("p",[t._v("这样在实际应用中，如果我们碰到需要优先让某个"),a("code",[t._v("BeanPostProcessor")]),t._v("执行，则可以让其实现"),a("code",[t._v("PriorityOrdered")]),t._v("接口或者"),a("code",[t._v("Ordered")]),t._v("接口。")]),t._v(" "),a("h5",{attrs:{id:"_6-3-initmessagesource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-initmessagesource"}},[t._v("#")]),t._v(" 6.3 initMessageSource()")]),t._v(" "),a("p",[t._v("用来支持消息国际化，现在一般项目中不会用到国际化相关的知识。")]),t._v(" "),a("h5",{attrs:{id:"_6-4-initapplicationeventmulticaster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-initapplicationeventmulticaster"}},[t._v("#")]),t._v(" 6.4 initApplicationEventMulticaster()")]),t._v(" "),a("p",[t._v("该方法初始化了一个事件广播器，如果容器中存在了"),a("code",[t._v("beanName")]),t._v("为"),a("code",[t._v("applicationEventMulticaster")]),t._v("的广播器，则使用该广播器；如果没有，则初始化一个"),a("code",[t._v("SimpleApplicationEventMulticaster")]),t._v("。该事件广播器是用来做应用事件分发的，这个类会持有所有的事件监听器("),a("code",[t._v("ApplicationListener")]),t._v(")，当有"),a("code",[t._v("ApplicationEvent")]),t._v("事件发布时，该事件监听器能根据事件类型，检索到对该事件感兴趣的"),a("code",[t._v("ApplicationListener")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("initApplicationEventMulticaster()")]),t._v("方法的源码如下(省略了部分日志信息):")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfigurableListableBeanFactory")]),t._v(" beanFactory "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断spring容器中是否已经存在beanName = applicationEventMulticaster的事件广播器")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如：如果开发人员自己注册了一个")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果存在，则使用已经存在的；否则使用spring默认的:SimpleApplicationEventMulticaster")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsLocalBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPLICATION_EVENT_MULTICASTER_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("applicationEventMulticaster "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n                 beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPLICATION_EVENT_MULTICASTER_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("applicationEventMulticaster "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SimpleApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        beanFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerSingleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("APPLICATION_EVENT_MULTICASTER_BEAN_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("applicationEventMulticaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"_6-5-onrefresh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-onrefresh"}},[t._v("#")]),t._v(" 6.5 onRefresh()")]),t._v(" "),a("p",[t._v("执行其他的初始化操作，例如和"),a("code",[t._v("SpringMVC")]),t._v("整合时，需要初始化一些其他的"),a("code",[t._v("bean")]),t._v("，但是对于纯"),a("code",[t._v("Spring")]),t._v("工程来说，"),a("code",[t._v("onRefresh()")]),t._v("方法是一个空方法。")]),t._v(" "),a("h5",{attrs:{id:"_6-6-registerlisteners"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-registerlisteners"}},[t._v("#")]),t._v(" 6.6 registerListeners()")]),t._v(" "),a("p",[t._v("这一步会将自定义的"),a("code",[t._v("listener")]),t._v("的"),a("code",[t._v("bean")]),t._v("名称放入到事件广播器中,同时还会将早期的"),a("code",[t._v("ApplicationEvent")]),t._v("发布(对于单独的"),a("code",[t._v("Spring")]),t._v("工程来说，在此时不会有任何"),a("code",[t._v("ApplicationEvent")]),t._v("发布，但是和"),a("code",[t._v("SpringMVC")]),t._v("整合时，"),a("code",[t._v("SpringMVC")]),t._v("会执行"),a("code",[t._v("onRefresh()")]),t._v("方法，在这里会发布事件)。方法源码如下:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register statically specified listeners first.")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationListener")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" listener "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getApplicationListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addApplicationListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从BeanFactory中找到所有的ApplicationListener，但是不会进行初始化，因为需要在后面bean实例化的过程中，让所有的BeanPostProcessor去改造它们")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" listenerBeanNames "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeanNamesForType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" listenerBeanName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" listenerBeanNames"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将事件监听器的beanName放入到事件广播器中")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addApplicationListenerBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listenerBeanName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发布早期的事件(纯的spring工程，在此时一个事件都没有)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" earlyEventsToProcess "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("earlyApplicationEvents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("earlyApplicationEvents "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("earlyEventsToProcess "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationEvent")]),t._v(" earlyEvent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" earlyEventsToProcess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getApplicationEventMulticaster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multicastEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("earlyEvent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"_6-7-finishbeanfactoryinitialization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-finishbeanfactoryinitialization"}},[t._v("#")]),t._v(" 6.7 finishBeanFactoryInitialization()")]),t._v(" "),a("p",[t._v("该方法十分重要，它完成了所有非懒加载的单例"),a("code",[t._v("Bean")]),t._v("的实例化和初始化，属性的填充以及解决了循环依赖等问题。由于微信平台对文章字数有限制，因此关于"),a("code",[t._v("Bean")]),t._v("的创建过程移到了另外一篇文章中,点击后面链接查看。("),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI4Mjg2NjUzNw==&mid=2247483679&idx=1&sn=03a08c6844397a6d2610d89577eb8558&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过源码看Bean的创建过程"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("《通过源码看Bean的创建过程》")]),t._v("这边文章中通过源码分析了所有后置处理器的作用，"),a("code",[t._v("Bean")]),t._v("的生命周期，以及后置处理的应用场景。")]),t._v(" "),a("h5",{attrs:{id:"_6-8-finishrefresh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-finishrefresh"}},[t._v("#")]),t._v(" 6.8 finishRefresh()")]),t._v(" "),a("p",[t._v("执行到这一步，"),a("code",[t._v("Spring")]),t._v("容器的启动基本结束了，此时"),a("code",[t._v("Bean")]),t._v("已经被实例化完成，且完成了自动装配。执行"),a("code",[t._v("finishRefresh()")]),t._v("方法，是为了在容器"),a("code",[t._v("refresh()")]),t._v("结束时，做一些其他的操作，例如：发布"),a("code",[t._v("ContextRefreshedEvent")]),t._v("事件，这样当我们想在容器"),a("code",[t._v("refresh")]),t._v("完成后执行一些特殊的逻辑，就可以通过监听"),a("code",[t._v("ContextRefreshedEvent")]),t._v("事件来实现。"),a("code",[t._v("Spring")]),t._v("内置了四个和应用上下文("),a("code",[t._v("ApplicationContextEvent")]),t._v(")有关的事件："),a("code",[t._v("ContextRefreshedEvent")]),t._v("、"),a("code",[t._v("ContextStartedEvent")]),t._v("、"),a("code",[t._v("ContextStopedEvent")]),t._v("、"),a("code",[t._v("ContextClosedEvent")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("finishRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearResourceCaches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLifecycleProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLifecycleProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发布ContextRefreshedEvent")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publishEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContextRefreshedEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LiveBeansView")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerApplicationContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("˛"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h5",{attrs:{id:"_6-9-resetcommoncaches"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-resetcommoncaches"}},[t._v("#")]),t._v(" 6.9 resetCommonCaches()")]),t._v(" "),a("p",[t._v("最后在"),a("code",[t._v("refresh()")]),t._v("方法的"),a("code",[t._v("finally")]),t._v("语句块中，执行了"),a("code",[t._v("resetCommonCaches()")]),t._v("方法。因为在前面创建"),a("code",[t._v("bean")]),t._v("时，对单例"),a("code",[t._v("bean")]),t._v("的元数据信息进行了缓存，而单例"),a("code",[t._v("bean")]),t._v("在容器启动后，不会再进行创建了，因此这些缓存的信息已经没有任何用处了，在这里进行清空，释放部分内存。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetCommonCaches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReflectionUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AnnotationUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResolvableType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearCache")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CachedIntrospectionResults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-总结"}},[t._v("#")]),t._v(" 7. 总结")]),t._v(" "),a("ul",[a("li",[t._v("本文介绍了"),a("code",[t._v("Spring")]),t._v("的启动流程，通过"),a("code",[t._v("AnnotationConfigApplicationContext")]),t._v("的有参构造方法入手，重点分析了"),a("code",[t._v("this()")]),t._v("方法和"),a("code",[t._v("refresh()")]),t._v("方法。在"),a("code",[t._v("this()")]),t._v("中初始化了一个"),a("code",[t._v("BeanFactory")]),t._v("，即"),a("code",[t._v("DefaultListableBeanFactory")]),t._v("；然后向容器中添加了7个内置的"),a("code",[t._v("bean")]),t._v("，其中就包括"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("refresh()")]),t._v("方法中，又重点分析了"),a("code",[t._v("invokeBeanFactoryPostProcessor()")]),t._v("方法和"),a("code",[t._v("finishBeanFactoryInitialization()")]),t._v("方法。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("invokeBeanFactoryPostProcessor()")]),t._v("方法中，通过"),a("code",[t._v("ConfigurationClassPostProcessor")]),t._v("类扫描出了所有交给"),a("code",[t._v("Spring")]),t._v("管理的类，并将"),a("code",[t._v("class")]),t._v("文件解析成对应的"),a("code",[t._v("BeanDefinition")]),t._v("。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("finishBeanFactoryInitialization()")]),t._v("方法中，完成了非懒加载的单例"),a("code",[t._v("Bean")]),t._v("的实例化和初始化操作，主要流程为"),a("code",[t._v("getBean()")]),t._v(" ——>"),a("code",[t._v("doGetBean()")]),t._v("——>"),a("code",[t._v("createBean()")]),t._v("——>"),a("code",[t._v("doCreateBean()")]),t._v("。在"),a("code",[t._v("bean")]),t._v("的创建过程中，一共出现了"),a("code",[t._v("8")]),t._v("次"),a("code",[t._v("BeanPostProcessor")]),t._v("的执行，在这些后置处理器的执行过程中，完成了"),a("code",[t._v("AOP")]),t._v("的实现、"),a("code",[t._v("bean")]),t._v("的自动装配、属性赋值等操作。")]),t._v(" "),a("li",[t._v("最后通过一张流程图，总结了"),a("code",[t._v("Spring")]),t._v("中单例"),a("code",[t._v("Bean")]),t._v("的生命周期。")])]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/q6zs7xRjpcB4YxLw6w477w",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/q6zs7xRjpcB4YxLw6w477w"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);