(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{639:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"java-操作-redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-操作-redis"}},[s._v("#")]),s._v(" Java 操作 Redis")]),s._v(" "),a("h3",{attrs:{id:"jedis的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis的基本使用"}},[s._v("#")]),s._v(" Jedis的基本使用")]),s._v(" "),a("p",[a("strong",[s._v("java连接Redis")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#首先查看linux的防火墙状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("sudo ufw status\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看系统哪些端口开放了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("firewall-cmd --list-ports\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启端口：6379")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("firewall-cmd --zone"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("/tcp --permanent\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重新启动防火墙")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("firewall-cmd --reload\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看系统哪些端口开放了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("firewall-cmd --list-ports\n")])])]),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("t1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.110.128"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 192.168.110.128 172.17.43.122")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" post"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" stringname"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"strName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stringname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"jedis工具类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis工具类"}},[s._v("#")]),s._v(" Jedis工具类")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("t3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPoolConfig")]),s._v(" jedisPoolConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPoolConfig")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedisPoolConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMaxIdle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最大空闲数")]),s._v("\n    jedisPoolConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setMaxTotal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最大连接数")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.110.128"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 192.168.110.128 172.17.43.122")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" post"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),s._v(" jedisPool"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedisPoolConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jedis")]),s._v(" jedis"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("jedisPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getResource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    jedis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"jedis对hash类型的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis对hash类型的操作"}},[s._v("#")]),s._v(" Jedis对Hash类型的操作")]),s._v(" "),a("h3",{attrs:{id:"spring-data-整合-redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-data-整合-redis"}},[s._v("#")]),s._v(" Spring-Data 整合 Redis")]),s._v(" "),a("h3",{attrs:{id:"string-案例限制登录功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-案例限制登录功能"}},[s._v("#")]),s._v(" string 案例限制登录功能")]),s._v(" "),a("ol",[a("li",[s._v("判断当前登录的用户是否被限制登录\n"),a("ol",[a("li",[s._v("如果没有被限制（执行登录功能）")]),s._v(" "),a("li",[s._v("如果被限制做相应提示")])])]),s._v(" "),a("li",[s._v("判断是否登录成功\n"),a("ol",[a("li",[s._v("登录成功--》（清除输入密码错误次数信息）")]),s._v(" "),a("li",[s._v("登录不成功")])])]),s._v(" "),a("li",[s._v("记录登录错误次数\n（判断 Redis中的登录次数KEY是否存在）user:loginCount:fail：用户名\n"),a("ol",[a("li",[s._v("如果不存在，是第一次登录，设置失败次数为1。user:loginCount:fail：用户名进行赋值，同时设置失效期")]),s._v(" "),a("li",[s._v("如果存在，查询登录失败次数的key结果")])])])]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("结果"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tuser"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("loginCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("fail："),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\n    限制登录KEY存在，同时设置限制登录时间锁定"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("小时。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"hash-类型案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash-类型案例"}},[s._v("#")]),s._v(" hash 类型案例")]),s._v(" "),a("h3",{attrs:{id:"spring-boot整合redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot整合redis"}},[s._v("#")]),s._v(" spring-boot整合redis")]),s._v(" "),a("p",[s._v("配置文件：application.properties")]),s._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("jdbc:mysql://39.96.88.215:3306/mybatis")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("root")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.datasource.password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("123456")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#spring.datasource.driver-class-name=com.mysql.jdbc.Driver")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启驼峰命名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("mybatis.configuration.map-underscore-to-camel-case")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("true")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#打印日志")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("logging.level.com.walegarrett.springbootcache.mapper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("debug")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#debug=true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.redis.host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("39.96.88.215")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.redis.password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("123456")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("spring.redis.port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("6379")]),s._v("\n")])])]),a("p",[s._v("RedisConfig")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRedisConfig")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("empRedisTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisConnectionFactory")]),s._v(" redisConnectionFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnknownHostException")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConnectionFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("redisConnectionFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转换为json保存")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jackson2JsonRedisSerializer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" ser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jackson2JsonRedisSerializer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置默认序列化器")]),s._v("\n        template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDefaultSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Bean")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("deptRedisTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisConnectionFactory")]),s._v(" redisConnectionFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UnknownHostException")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" template "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setConnectionFactory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("redisConnectionFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jackson2JsonRedisSerializer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" ser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Jackson2JsonRedisSerializer")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Department")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setDefaultSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("序列化和保存对象")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EmployeeMapper")]),s._v(" employeeMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StringRedisTemplate")]),s._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//k-v都是字符串")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),s._v(" redisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//k-v都是对象")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RedisTemplate")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" empRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test02")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//默认如果保存对象，使用jdk序列化机制保存")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Employee")]),s._v(" employee"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("employeeMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getEmpById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//redisTemplate.opsForValue().set("emp-01",employee);')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将数据以json的形式保存：")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (1)自己将对象转换为json")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(2)修改jdk的默认序列化机制")]),s._v("\n        empRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"emp-01"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"redis与数据库数据不一致问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis与数据库数据不一致问题"}},[s._v("#")]),s._v(" Redis与数据库数据不一致问题")]),s._v(" "),a("h3",{attrs:{id:"问题背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题背景"}},[s._v("#")]),s._v(" 问题背景")]),s._v(" "),a("p",[s._v("假设"),a("strong",[s._v("两个业务逻辑都是在操作数据库的同一条记录")]),s._v("，而Redis 和数据库不一致，如图21-1 的场景。在图21-1 中， Tl 时刻以键keyl 保存数据到Redis, T2 时刻刷新进入数据库，但是T3时刻发生了其他业务需要改变数据库同一条记录的数据，但是采用了key2 保存到Redis 中，然后又写入了更新数据到数据库中，此时在Redis 中keyl 的数据是"),a("strong",[s._v("脏数据")]),s._v("，和数据库的数据并不一致。")]),s._v(" "),a("p",[s._v("不用沮丧，因为互联网系统显示给用户的信息往往并不需要完全是“最新的”，"),a("strong",[s._v("有些数据允许延迟")]),s._v("。举个例子， 一个购物网站会有一个用户购买排名榜，如果做成实时的，每一笔投资都会引发重新计算， 那么网站的性能就存在极大的压力，但是这个排名榜却没有太大的意义。同样， 商品的总数有时候只需要去实现一个非实时的数据。这些在互联网系统中也是十分常见的， 一般而言，可以在某段时间进行刷新（比如以一个小时为刷新间隔），排出这段时间的最新排名， 这就是延迟性的更新。")]),s._v(" "),a("p",[s._v("但是对于一些内容则需要最新的，"),a("strong",[s._v("尤其是当前用户的交易记录、购买时商品的数量， 这些需要实时处理，以避免数据的不一致")]),s._v("，因为这些都是对于企业和用户重要的记录。我们会"),a("strong",[s._v("考虑读／写以数据库的最新记录为主，并且同步写入Redis，这样数据就能保持一致性了")]),s._v("， 而对于一些常用的只需要显示的，则以查询Redis 为主。这样网站的性能就很高了， 毕竟写入的次数远比查询的次数要少得多得多。下面先对数据库的读／写操作进行基本阐述。")]),s._v(" "),a("p",[a("strong",[s._v("写操作要考虑数据一致的问题，尤其是那些重要的业务数据，所以首先应该考虑从数据库中读取最新的数据，然后对数据进行操作，最后把数据写入Redis 缓存中")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203282212716.png",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),a("p",[s._v("那么我们这里列出来所有策略，并且讨论他们优劣性。")]),s._v(" "),a("ol",[a("li",[s._v("先更新数据库，后更新缓存")]),s._v(" "),a("li",[s._v("先更新数据库，后删除缓存")]),s._v(" "),a("li",[s._v("先更新缓存，后更新数据库")]),s._v(" "),a("li",[s._v("先删除缓存，后更新数据库")])]),s._v(" "),a("h4",{attrs:{id:"先更新数据库-后更新缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先更新数据库-后更新缓存"}},[s._v("#")]),s._v(" 先更新数据库，后更新缓存")]),s._v(" "),a("p",[a("strong",[s._v("这种场景一般是没有人使用的")]),s._v("，主要原因是在更新缓存那一步，为什么呢？因为"),a("strong",[s._v("有的业务需求缓存中存在的值并不是直接从数据库中查出来的，有的是需要经过一系列计算来的缓存值，那么这时候后你要更新缓存的话其实代价是很高的")]),s._v("。如果此时有大量的对数据库进行写数据的请求，但是读请求并不多，那么此时如果每次写请求都更新一下缓存，那么性能损耗是非常大的。")]),s._v(" "),a("p",[s._v("举个例子比如在数据库中有一个值为 1 的值，此时我们有 10 个请求对其每次加一的操作，但是这期间并没有读操作进来，如果用了先更新数据库的办法，那么此时就会有十个请求对缓存进行更新，会"),a("strong",[s._v("有大量的冷数据产生")]),s._v("，如果我们不更新缓存而是删除缓存，那么在有读请求来的时候那么就会只更新缓存一次。")]),s._v(" "),a("h4",{attrs:{id:"先更新缓存-后更新数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先更新缓存-后更新数据库"}},[s._v("#")]),s._v(" 先更新缓存，后更新数据库")]),s._v(" "),a("p",[s._v("这一种情况应该不需要我们考虑了吧，和第一种情况是一样的。")]),s._v(" "),a("h4",{attrs:{id:"先删除缓存-后更新数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先删除缓存-后更新数据库"}},[s._v("#")]),s._v(" 先删除缓存，后更新数据库")]),s._v(" "),a("p",[a("strong",[s._v("①同步更新缓存策略")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("A线程进行写操作，先成功淘汰缓存，但由于网络或其它原因，还未更新数据库或正在更新")])]),s._v(" "),a("li",[a("p",[s._v("B线程进行读操作，发现缓存中没有想要的数据，从数据库中读取数据，但此时A线程还未完成更新操作，所以读取到的是旧数据，并且B线程将旧数据放入缓存。注意"),a("strong",[s._v("此时是没有问题的")]),s._v("，因为数据库中的数据还未完成更新，所以数据库与缓存此时存储的都是旧值，数据没有不一致")])]),s._v(" "),a("li",[a("p",[s._v("在B线程将旧数据读入缓存后，A线程终于将数据更新完成，"),a("strong",[s._v("此时是有问题的")]),s._v("，数据库中是更新后的新数据，缓存中是更新前的旧数据，数据不一致。如果在缓存中没有对该值设置过期时间，旧数据将一直保存在缓存中，数据将一直不一致，直到之后再次对该值进行修改时才会在缓存中淘汰该值")])]),s._v(" "),a("li",[a("p",[s._v("此时可能会导致cache与数据库的数据一直或很长时间不一致")])])]),s._v(" "),a("h5",{attrs:{id:"解决方案一-使用串行化思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案一-使用串行化思路"}},[s._v("#")]),s._v(" 解决方案一：使用串行化思路")]),s._v(" "),a("p",[s._v("即保证对同一个数据的读写严格按照先后顺序串行化进行，避免并发较大的情况下，多个线程同时对同一数据进行操作时带来的数据不一致性。")]),s._v(" "),a("h5",{attrs:{id:"解决方案二-延时双删-设置缓存的超时时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案二-延时双删-设置缓存的超时时间"}},[s._v("#")]),s._v(" 解决方案二：延时双删+设置缓存的超时时间")]),s._v(" "),a("p",[s._v("不一致的原因是，在淘汰缓存之后，旧数据再次被读入缓存，且之后没有淘汰策略，所以解决思路就是，在旧数据再次读入缓存后，再次淘汰缓存，即淘汰缓存两次(延迟双删)")]),s._v(" "),a("p",[s._v("引入延时双删后，执行步骤变为下面这种情形：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("A线程进行写操作，先成功淘汰缓存，但由于网络或其它原因，还未更新数据库或正在更新")])]),s._v(" "),a("li",[a("p",[s._v("B线程进行读操作，从数据库中读入旧数据，共耗时N秒")])]),s._v(" "),a("li",[a("p",[s._v("在B线程将旧数据读入缓存后，A线程将数据更新完成，此时数据不一致")])]),s._v(" "),a("li",[a("p",[s._v("A线程将数据库更新完成后，休眠M秒(M比N稍大即可)，然后再次淘汰缓存，此时缓存中即使有旧数据也会被淘汰，此时可以保证数据的一致性")])]),s._v(" "),a("li",[a("p",[s._v("其它线程进行读操作时，缓存中无数据，从数据库中读取的是更新后的新数据")])])]),s._v(" "),a("p",[a("strong",[s._v("引入延时双删后，存在两个新问题：")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("A线程需要在更新数据库后，还要休眠M秒再次淘汰缓存，等所有操作都执行完，这一个更新操作才真正完成，降低了更新操作的吞吐量")]),s._v(" "),a("p",[s._v("解决办法：用“异步淘汰”的策略，将休眠M秒以及二次淘汰放在另一个线程中，A线程在更新完数据库后，可以直接返回成功而不用等待。")])]),s._v(" "),a("li",[a("p",[s._v("如果第二次缓存淘汰失败，则不一致依旧会存在")]),s._v(" "),a("p",[s._v("解决办法：用“重试机制”，即当二次淘汰失败后，报错并继续重试，直到执行成功个人")])])]),s._v(" "),a("p",[a("strong",[s._v("“异步淘汰”策略：")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203282212565.png",alt:"img"}})]),s._v(" "),a("p",[s._v("A线程执行完步骤2不再休眠Ms，而是往消息总线esb发送一个消息，发送完成之后马上就能返回")]),s._v(" "),a("p",[a("strong",[s._v("②异步更新缓存策略：")])]),s._v(" "),a("ol",[a("li",[s._v("A线程进行写操作，先成功淘汰缓存，但由于网络或其它原因，还未更新数据库或正在更新")]),s._v(" "),a("li",[s._v("B线程进行读操作，发现缓存中没有想要的数据，从数据库中读取数据，但B线程"),a("strong",[s._v("只是从数据库中读取想要的数据，并不将这个数据放入缓存中")]),s._v("，所以并不会导致缓存与数据库的不一致")]),s._v(" "),a("li",[s._v("A线程更新数据库后，通过订阅binlog来异步更新缓存")]),s._v(" "),a("li",[s._v("此时数据库与缓存的内容将一直都是一致的")])]),s._v(" "),a("h4",{attrs:{id:"先更新数据库-后删除缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先更新数据库-后删除缓存"}},[s._v("#")]),s._v(" 先更新数据库，后删除缓存")]),s._v(" "),a("p",[s._v("问题：这一种情况也会出现问题，比如更新数据库成功了，但是在删除缓存的阶段出错了没有删除成功，那么此时再读取缓存的时候每次都是错误的数据了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203282212673.png",alt:"img"}})]),s._v(" "),a("h5",{attrs:{id:"解决方案一-使用消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案一-使用消息队列"}},[s._v("#")]),s._v(" 解决方案一：使用消息队列")]),s._v(" "),a("p",[s._v("此时解决方案就是**利用消息队列进行删除(重试机制)**的补偿。具体的业务逻辑用语言描述如下：")]),s._v(" "),a("ol",[a("li",[s._v("请求 A 先对数据库进行更新操作")]),s._v(" "),a("li",[s._v("在对 Redis 进行删除操作的时候发现报错，删除失败")]),s._v(" "),a("li",[s._v("此时将Redis 的 key 作为消息体发送到消息队列中")]),s._v(" "),a("li",[s._v("系统接收到消息队列发送的消息后再次对 Redis 进行删除操作")])]),s._v(" "),a("p",[s._v("但是这个方案会有一个缺点就是会对业务代码造成大量的侵入，深深的耦合在一起，所以这时会有一个优化的方案，我们知道对 Mysql 数据库更新操作后再 binlog 日志中我们都能够找到相应的操作，那么我们可以订阅 Mysql 数据库的 binlog 日志对缓存进行操作。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203282212701.png",alt:"img"}})]),s._v(" "),a("h5",{attrs:{id:"解决方案二-延时双删"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案二-延时双删"}},[s._v("#")]),s._v(" 解决方案二：延时双删")]),s._v(" "),a("p",[s._v("依旧是先更新数据库，再删除缓存，唯一不同的是，我们把这个删除的动作，在不久之后再执行一次，比如 5s 之后。")]),s._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("每种方案各有利弊，比如在第二种先删除缓存，后更新数据库这个方案我们最后讨论了要更新 Redis 的时候强制走主库查询就能解决问题，那么这样的操作会对业务代码进行大量的侵入，但是不需要增加的系统，不需要增加整体的服务的复杂度。")]),s._v(" "),a("p",[s._v("最后一种方案我们最后讨论了利用订阅 binlog 日志进行搭建独立系统操作 Redis，这样的缺点其实就是增加了系统复杂度。其实每一次的选择都需要我们对于我们的业务进行评估来选择，没有一种技术是对于所有业务都通用的。没有最好的，只有最适合我们的。")]),s._v(" "),a("p",[a("strong",[s._v("两种方案的比较：")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("先淘汰cache，再更新数据库：**")]),s._v(" "),a("ol",[a("li",[s._v("采用同步更新缓存的策略，可能会导致数据长时间不一致，如果用延迟双删来优化，还需要考虑究竟需要延时多长时间的问题——读的效率较高，但数据的一致性需要靠其它手段来保证")]),s._v(" "),a("li",[s._v("采用异步更新缓存的策略，不会导致数据不一致，但在数据库更新完成之前，都需要到数据库层面去读取数据，读的效率不太好——"),a("strong",[s._v("保证了数据的一致性，适用于对一致性要求高的业务")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("先更新数据库，再淘汰cache：")])]),s._v(" "),a("ol",[a("li",[s._v("无论是同步/异步更新缓存，都不会导致数据的最终不一致，在更新数据库期间，cache中的旧数据会被读取，可能会有一段时间的数据不一致，但读的效率很好——"),a("strong",[s._v("保证了数据读取的效率，如果业务对一致性要求不是很高，这种方案最合适")])])])])]),s._v(" "),a("h2",{attrs:{id:"spring缓存机制与redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring缓存机制与redis"}},[s._v("#")]),s._v(" Spring缓存机制与Redis")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://walegarrett-image-1304556108.cos.ap-chengdu.myqcloud.com/markdown_img/202203282212202.png",alt:"img"}})]),s._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000039078249",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何保证 Redis 缓存与数据库双写一致性？ - SegmentFault 思否"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://developer.aliyun.com/article/712285",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何保证缓存(redis)与数据库(MySQL)的一致性-阿里云开发者社区"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);